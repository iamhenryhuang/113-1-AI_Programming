# -*- coding: utf-8 -*-
"""ai_hw2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xiXp3iz6Y9q5HrTTRcrlZ1E7-6C2moyi

將資料檔 HealthCheck.csv 讀入
"""

import pandas as pd
import numpy as np
import os

Dataset_File = "HealthCheck.csv"
if not os.path.isfile(Dataset_File):
  os.system("wget https://raw.githubusercontent.com/cnchi/datasets/master/" + Dataset_File)

dataset = pd.read_csv("HealthCheck.csv")
print(dataset)

"""將資料集切分為「自變數 X」與「應變數 Y」"""

X = dataset.iloc[:, :-1].values
Y = dataset.iloc[:, 3].values

"""把缺失資料補上(取欄平均填入)"""

from sklearn.impute import SimpleImputer

imputer = SimpleImputer(missing_values=np.nan, strategy="mean")
imputer = imputer.fit(X[:, 1:3])
X[:, 1:3] = imputer.transform(X[:, 1:3])

"""將資料集裡面的文字欄位，包含自變數 X 與應變數 Y，轉換為數字欄位

"""

#使用標籤編碼器(LabelEncoder) 對 Y 做類別資料數位化
from sklearn.preprocessing import LabelEncoder

labelEncoder = LabelEncoder()
Y = labelEncoder.fit_transform(Y).astype("float64")

#使用One-Hot Encoder對 X 做類別資料數位化
array_dummies = pd.get_dummies(X[:, 0]).values
X = np.concatenate((array_dummies, X[:, 1:3]), axis=1).astype("float64")

"""將資料集切分為「訓練集」與「測試集」"""

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0)

"""針對自變數 X 相關資料集，進行「特徵縮放」"""

from sklearn.preprocessing import StandardScaler

sc_X = StandardScaler().fit(X_train)
X_train = sc_X.transform(X_train)
X_test = sc_X.transform(X_test)

print("自變數訓練集\n", X_train)
print("自變數測試集\n", X_test)
print("應變數訓練集", Y_train)
print("應變數測試集", Y_test)
